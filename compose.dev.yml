services:
  shippingd:
    container_name: shippingd
    build: .
    restart: always
    volumes:
      - "${PROJECT_PWD}./:/app"
      - /app/node_modules
      - /app/packages/api/node_modules
      - /app/packages/web/node_modules
      - /app/packages/shared/node_modules
    env_file:
      - .env
    ports:
      - 5173:5173
      - '${API_PORT}:${API_PORT}'
    networks:
      - shippingnet

  shippingw:
    container_name: shippingw
    image: nginx
    ports:
      - "${WEB_PORT}:80"
    restart: always
    volumes:
      - "${PROJECT_PWD}./packages/web/dist:/usr/share/nginx/html"
      - "${PROJECT_PWD}./packages/web/nginx/nginx.conf:/etc/nginx/nginx.conf"
      - "${PROJECT_PWD}./packages/web/nginx/default.conf:/etc/nginx/conf.d/*.conf"

  shippingdb:
    container_name: shippingdb
    image: 'mysql'
    restart: always
    ports:
      - '${MYSQL_PORT}:${MYSQL_PORT}'
    environment:
      MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
      MYSQL_DATABASE: '${DB_DATABASE}'
      MYSQL_USER: '${DB_USERNAME}'
      MYSQL_PASSWORD: '${DB_PASSWORD}'
      MYSQL_TCP_PORT: '${MYSQL_PORT}'
      MYSQL_ALLOW_EMPY_PASSWORD: '1'
    healthcheck:
      test: [ 'CMD', 'mysqladmin', '-u${DB_USERNAME}', '-p${DB_PASSWORD}', 'ping' ]
      retries: 3
      timeout: 5s
    volumes:
      - "${PROJECT_PWD}.docker-volume/db:/var/lib/mysql"
    networks:
      - shippingnet

  shippingr:
    container_name: shippingr
    image: redis:latest
    restart: always
    command: "--port ${REDIS_PORT}"
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    volumes:
      - "${PROJECT_PWD}.docker-volume/redis/data:/data"
      - "${PROJECT_PWD}.docker-volume/redis/conf:/usr/local/etc/redis/redis.conf"
    networks:
      - shippingnet

  bull-monitor:
    container_name: bull-monitor
    image: tiagoboeing/bull-board:latest
    restart: always
    ports:
      - "${BULL_MONITOR_PORT}:${BULL_MONITOR_PORT}"
    environment:
      QUEUE_PREFIX: 'bull'
      QUEUE_NAMES: |
        trip-notifications;
        accept-notifications
      REDIS_HOST: shippingr
      REDIS_PORT: "${REDIS_PORT}"
    networks:
      - shippingnet
    depends_on:
      - shippingr

networks:
  shippingnet:
    name: shippingnet
